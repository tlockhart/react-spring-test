{"ast":null,"code":"import _slicedToArray from \"E:/react-three-fiber/react-spring-test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"E:\\\\react-three-fiber\\\\react-spring-test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useSpring, animated, config } from \"react-spring/three\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyRotatingBox() {\n  _s();\n\n  var myMesh = React.useRef();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useSpring = useSpring({\n    // scale: active ? 1.5 : 1,\n    // config: config.wobbly\n    spring: active,\n    config: {\n      mass: 5,\n      tension: 400,\n      friction: 50,\n      precision: 0.0001\n    }\n  }),\n      spring = _useSpring.spring; // useFrame(({ clock }) => {\n  //   const a = clock.getElapsedTime();\n  //   myMesh.current.rotation.x = a;\n  // });\n  // const scale = spring.to([0, 1], [1,5])\n\n\n  var rotation = spring.to([0, 1], [0, 2 * Math.PI]);\n  var color = spring.to([0, 1], ['#6246ea', '#e45858']);\n  return /*#__PURE__*/_jsxDEV(animated.mesh, {\n    \"rotation-y\": rotation,\n    onClick: function onClick() {\n      return setActive(Number(!active));\n    },\n    ref: myMesh,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      attach: \"geometry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.meshStandardMaterial, {\n      roughness: 0.5,\n      attach: \"material\",\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyRotatingBox, \"RXPxRHJQqNrSzvhYtTvORZu+yTM=\", false, function () {\n  return [useSpring];\n});\n\n_c = MyRotatingBox;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(MyRotatingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyRotatingBox\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["E:/react-three-fiber/react-spring-test/src/App.js"],"names":["React","useState","Canvas","useFrame","useSpring","animated","config","MyRotatingBox","myMesh","useRef","active","setActive","spring","mass","tension","friction","precision","rotation","to","Math","PI","color","Number","App"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,oBAA5C;AACA,OAAO,cAAP;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,MAAMC,MAAM,GAAGR,KAAK,CAACS,MAAN,EAAf;;AACA,kBAA4BR,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOS,MAAP;AAAA,MAAeC,SAAf;;AAEA,mBAAmBP,SAAS,CAAC;AAC3B;AACA;AACAQ,IAAAA,MAAM,EAAEF,MAHmB;AAI3BJ,IAAAA,MAAM,EAAE;AAACO,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE,GAAnB;AAAwBC,MAAAA,QAAQ,EAAE,EAAlC;AAAsCC,MAAAA,SAAS,EAAE;AAAjD;AAJmB,GAAD,CAA5B;AAAA,MAAQJ,MAAR,cAAQA,MAAR,CAJuB,CAWvB;AACA;AACA;AACA;AACA;;;AACA,MAAMK,QAAQ,GAAGL,MAAM,CAACM,EAAP,CAAU,CAAC,CAAD,EAAG,CAAH,CAAV,EAAiB,CAAC,CAAD,EAAI,IAAEC,IAAI,CAACC,EAAX,CAAjB,CAAjB;AACA,MAAMC,KAAK,GAAGT,MAAM,CAACM,EAAP,CAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,EAAkB,CAAC,SAAD,EAAY,SAAZ,CAAlB,CAAd;AAEA,sBACE,QAAC,QAAD,CAAU,IAAV;AACE,kBAAYD,QADd;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,SAAS,CAACW,MAAM,CAAC,CAACZ,MAAF,CAAP,CAAf;AAAA,KAFX;AAGE,IAAA,GAAG,EAAEF,MAHP;AAAA,4BAKE;AAAmB,MAAA,MAAM,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,QAAD,CAAU,oBAAV;AAA+B,MAAA,SAAS,EAAE,GAA1C;AAA+C,MAAA,MAAM,EAAC,UAAtD;AAAiE,MAAA,KAAK,EAAEa;AAAxE;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BQd,a;UAIYH,S;;;KAJZG,a;AAgCT,eAAe,SAASgB,GAAT,GAAe;AAC5B,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAc,QAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;MAVuBA,G","sourcesContent":["import React, { useState } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useSpring, animated, config } from \"react-spring/three\";\nimport \"./styles.css\";\n\nfunction MyRotatingBox() {\n  const myMesh = React.useRef();\n  const [active, setActive] = useState(0);\n\n  const { spring } = useSpring({\n    // scale: active ? 1.5 : 1,\n    // config: config.wobbly\n    spring: active,\n    config: {mass: 5, tension: 400, friction: 50, precision: 0.0001}\n  });\n\n  // useFrame(({ clock }) => {\n  //   const a = clock.getElapsedTime();\n  //   myMesh.current.rotation.x = a;\n  // });\n  // const scale = spring.to([0, 1], [1,5])\n  const rotation = spring.to([0,1], [0, 2*Math.PI]);\n  const color = spring.to([0, 1], ['#6246ea', '#e45858']);\n\n  return (\n    <animated.mesh\n      rotation-y={rotation}\n      onClick={() => setActive(Number(!active))}\n      ref={myMesh}\n    >\n      <boxBufferGeometry attach=\"geometry\" />\n      {/* <meshPhongMaterial color=\"royalblue\" /> */}\n      <animated.meshStandardMaterial roughness={0.5} attach=\"material\" color={color} />\n    </animated.mesh>\n  );\n}\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Canvas>\n        <MyRotatingBox />\n        <ambientLight intensity={0.1} />\n        <directionalLight />\n      </Canvas>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}